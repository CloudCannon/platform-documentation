_schema: default
key_name: routes.forced
key_singular_name: forced
key_value_type:
  - Boolean
key_description: >-
  This key toggles whether a redirect rule should take priority over the
  requested URL, even if the web server successfully finds content served to the
  URL.


  Setting this key to `false` will prevent the redirect rule from taking
  priority unless the web server cannot find any content on the requested URL. This is useful if you don't want a greedy REGEX string in your redirect rule interfering with existing routes.


  By default, this key is `true` (i.e., redirect rules will take priority).


  <comp.Example>
    In this example, we want to redirect all URLs to the 404 page unless the web server succesfully finds the content.

    <comp.MultiCodeBlock language="JSON" source="routing.json">
    ``````````
    {
      "routes": [
        {
          "from": "/.*",
          "to": "/404.html",
          "status": 404,
          "forced": false
        }
      ]
    }
    ``````````
    </comp.MultiCodeBlock>
  </comp.Example>
key_documentation:
  text: Routing
  url: /documentation/articles/what-is-routing/
parent_keys:
  - routes
subkeys:
