_schema: default
key_name: collections_config.[*].sort
key_value_type:
  - Object
key_description: >-
  This key defines how CloudCannon sorts your Collection files when you first
  open your *Collection browser*. Configuring this key allows you to sort your
  Collection using a structured data key in your files.


  The following nested keys are available:


  * `key` (required)

  * `order`


  By default, CloudCannon sorts your Collection files alphabetically by filename
  in ascending order by default. However, if you have configured the
  [sort\_options](/documentation/articles/collections-reference/#sort_options)
  key, CloudCannon will use the first array item in `sort_options`.


  If you use the *Sort* dropdown in your *Collection browser* to order your
  Collection files, CloudCannon will preferentially use your most recent sorting
  method over the value configured in the `sort` key.


  <comp.Example>
    In this example, CloudCannon will sort files in the `blog` Collection by the `date` key in the frontmatter of each file, in descending order.

    <comp.MultiCodeBlock language="YAML" translate_into={["json"]} source="cloudcannon.config.yml">
    ``````````
    collections_config:
      blog:
        sort:
          key: date
          order: descending
    ``````````
    </comp.MultiCodeBlock>
  </comp.Example>
key_documentation:
  text: Collections
  url: /documentation/articles/what-is-a-collection/
parent_keys:
  - collections_config
subkeys:
  - collections_config.[*].sort.key
  - collections_config.[*].sort.order
