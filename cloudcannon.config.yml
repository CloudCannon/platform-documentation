_snippets_imports:
  mdx: true

_snippets:
  code_block:
    snippet: "<comp.CodeBlock [[args]]>\\n[[backticks]]\\n[[inner]]\\n[[backticks]]\\n[[annotations]]</comp.CodeBlock>"
    inline: false
    preview:
      text:
        - key: source
        - Code Block
      subtext: 
        - key: content
      icon: code
    _inputs: 
      content: 
        type: code
      annotations:
        type: array
        comment: "Optional annotations to show below the code block. Link them with a comment like `/*1*/`, `//1`, `#1`, or `<!--1-->`"
        options:
          structures:
            values:
              - _inputs:
                  annotation_content:
                    type: markdown
                  number:
                    comment: "Match to a comment of `/*1*/`, `//1`, `#1`, or `<!--1-->` in the code block"
                    type: text
                preview:
                  icon: campaign
                  text:
                    - key: number
                    - Unconfigured
                  subtext:
                    - key: annotation_content
                    - Empty
                value: 
                  number: "1"
                  annotation_content: ""
    params:
      backticks:
        parser: repeating_literal
        options:
          literal: "`"
          minimum: 3
          default: 10
      args:
        parser: key_values
        options:
          models:
            - editor_key: language
              type: string
              default: ""
              optional: true
            - editor_key: source
              type: string
              default: ""
              optional: true
              remove_empty: true
            - editor_key: frameless
              type: boolean
              optional: true
              remove_empty: true
          format:
            ref: mdx_format
      inner:
        parser: content
        options:
          editor_key: content
          allow_nested: false
          raw: true
          forbidden_tokens:
            - "```"
          style:
            output: block
            block:
              leading: "\n"
              trailing: "\n"
              indent: ""
      annotations:
        parser: optional
        options: 
          snippet: "[[annotation_repeat]]"
      annotation_repeat:
        parser: repeating
        options:
          default_length: 0
          editor_key: annotations
          snippet: "<comp.Annotation [[annotation_args]]>[[annotation_content]]</comp.Annotation>"
          style:
            between: "\n"
            block:
              leading: ""
              trailing: "\n"
      annotation_args:
        parser: key_values
        options:
          models:
            - editor_key: number
              type: string
          format: 
            ref: mdx_format
      annotation_content:
        parser: content
        options:
          editor_key: annotation_content
          allow_nested: false
          raw: true
          style:
            output: block
            block:
              leading: "\n"
              trailing: "\n"
              indent: "  "

  common_content_param:
    snippet: <comp.CommonParam parameters={parameters} [[args]] />
    inline: true
    preview:
      view: inline
      icon: switch_access_shortcut_add
      text:
        - key: parameter
        - "Common Content Parameter"
    _inputs: 
      parameter:
        type: text
        comment: "The key of a value to insert in this location. If using a new key, make sure to define it in the Parameters for this page."
      append:
        type: text
        comment: "Append this text to the end of the parameter when inserted on the page. Will not be appended if the parameter is left blank."
      prepend:
        type: text
        comment: "Prepend this text to the start of the parameter when inserted on the page. Will not be prepended if the parameter is left blank."
    params: 
      args:
        parser: key_values
        options:
          models:
            - editor_key: parameter
              type: string
            - editor_key: append
              type: string
              optional: true
              remove_empty: true
            - editor_key: prepend
              type: string
              optional: true
              remove_empty: true
          format: 
            ref: mdx_format

  common_content: 
    snippet: <comp.CommonContent [[args]]>[[slots_repeat]]</comp.CommonContent>
    inline: false
    preview:
      text:
        - Common Content
      subtext:
        - key: common_content_data
      icon: copy_all
    _inputs:
      common_content_data:
        comment: "Select the piece of common content you want to insert, and fill in the required data"
        type: object
        options:
          structures: _structures.common_content_types
      slots:
        type: array
        comment: "If the common content you selected has slots, you can specify content for those slots here"
        options:
          structures:
            values:
              - _inputs:
                  name: 
                    comment: "The name of a slot that your selected content has defined"
                    type: text
                  slot_content:
                    type: markdown
                    options:
                      format: true
                      blockquote: true
                      bold: true
                      italic: true
                      strike: true
                      subscript: true
                      superscript: true
                      underline: true
                      link: true
                      bulletedlist: true
                      numberedlist: true
                      code: true
                      embed: true
                      horizontalrule: true
                      table: true
                      snippet: true
                preview:
                  icon: select_all
                  text: 
                    - key: name
                    - Unassigned slot
                  subtext:
                    - key: slot_content
                    - Empty content
                value: 
                  name: ""
                  slot_content: ""
    params:
      args: 
        parser: key_values
        options: 
          models:
            - source_key: data
              editor_key: common_content_data
              type: object
          format:
            ref: mdx_format
      slots_repeat: 
        parser: repeating
        options: 
          default_length: 0
          optional: true
          editor_key: slots
          snippet: <comp.SlotContent [[slot_args]]>[[slot_content]]</comp.SlotContent>
          style:
            output: block
            between: "\n"
            block:
              leading: "\n"
              trailing: "\n"
              indent: "  "
      slot_args:
        parser: key_values
        options: 
          models:
            - editor_key: name
              type: string
          format:
            ref: mdx_format
      slot_content:
        parser: content
        options: 
          editor_key: slot_content
          allow_nested: true
          style:
            output: block
            block: 
              leading: "\n"
              trailing: "\n"
              indent: "  "

  data_reference: 
    snippet: <comp.DataReference>[[rows]]</comp.DataReference>
    inline: false
    preview:
      text: Data Reference Table
    params: 
      rows: 
        parser: repeating
        options: 
          editor_key: rows
          snippet: <comp.DataReferenceRow [[row_args]]>[[content]]</comp.DataReferenceRow>
          style: 
            output: block
            between: "\n"
            block:
              leading: "\n"
              trailing: "\n"
              indent: "  "
      row_args: 
        parser: key_values
        options: 
          models: 
            - editor_key: label
              type: string
              optional: true
              default: ""
            - editor_key: type_markdown
              type: string
              optional: true
              default: ""
          format:
            ref: mdx_format
      content:
        parser: content
        options: 
          editor_key: inner_markdown
          allow_nested: true
          style:
            output: block
            block: 
              leading: "\n"
              trailing: "\n"
              indent: "  "

  docs_image: 
    template: mdx_component
    inline: false
    preview:
      text: "Docs Image"
      view: gallery
      subtext:
        - key: alt
      icon: crop_original
      image:
        - key: path
      gallery:
        image:
          - key: path
    _inputs: 
      type: 
        type: select
        options: 
          values:
            - photo
            - screenshot
            - ui-snippet
      alt:
        type: textarea
        options: 
          show_count: true
    definitions: 
      component_name: comp.DocsImage
      named_args:
        - editor_key: path
          type: string
        - editor_key: alt
          type: string
        - editor_key: title
          optional: true
          type: string
        - editor_key: type
          type: string
          optional: true
          remove_empty: true

  docs_video: 
    template: mdx_component
    inline: false
    preview:
      text: Docs Video
      subtext:
        - key: title
      icon: crop_original
    _inputs:
      title:
        comment: "The title of the video, used for accessibility"
      url:
        comment: "The location of the video (Must be MP4)"
        type: url
      autoplay: 
        comment: "Whether this video should start playing automatically"
        type: switch
      loop:
        comment: "Whether this video should start again when finished"
        type: switch
    definitions: 
      component_name: comp.DocsVideo
      named_args:
        - editor_key: url
          type: string
        - editor_key: title
          type: string
        - editor_key: autoplay
          optional: true
          default: true
          type: boolean
        - editor_key: loop
          optional: true
          default: true
          type: boolean

  example: 
    snippet: <comp.Example>[[inner]]</comp.Example>
    inline: false
    preview:
      text: Example
      subtext: 
        - key: content_markdown
      icon: school
    params:
      inner: 
        parser: content
        options: 
          editor_key: content_markdown
          style: 
            output: block
            block: 
              leading: "\n"
              trailing: "\n"
              indent: "  "

  multi_code_block: 
    snippet: <comp.MultiCodeBlock [[args]]>\n[[backticks]]\n[[inner]]\n[[backticks]]\n[[annotations]]</comp.MultiCodeBlock>
    inline: false
    preview:
      text:
        - key: source
        - "Multi Code Block"
      subtext:
        - key: content
      icon: data_object
    _inputs: 
      content: 
        type: code
      annotations:
        type: array
        comment: "Optional annotations to show below the code block. Link them to a key containing `___1___` or `___2___` (which will be removed from the key before display)"
        options:
          structures: 
            values:
              - _inputs: 
                  annotation_content: 
                    type: markdown
                  number:
                    comment: "Match to a key containing `___1___` or `___2___` in the code block"
                    type: text
                preview:
                  icon: campaign
                  text:
                    - key: number
                    - "Unconfigured"
                  subtext: 
                    - key: annotation_content
                    - "Empty"
                value: 
                  number: "1"
                  annotation_content: ""
    params:
      backticks:
        parser: repeating_literal
        options:
          literal: "`"
          minimum: 3
          default: 10
      args: 
        parser: key_values
        options: 
          models:
            - editor_key: language
              type: string
              default: ""
              optional: true
            - editor_key: translate_into
              type: array
              default:
                - "json"
            - editor_key: source
              type: string
              default: ""
              optional: true
          format:
            ref: mdx_format
      inner: 
        parser: content
        options: 
          editor_key: content
          allow_nested: false
          raw: true
          forbidden_tokens:
            - "```"
          style:
            output: block
            block: 
              leading: "\n"
              trailing: "\n"
              indent: ""
      annotations: 
        parser: optional
        options:
          snippet: "[[annotation_repeat]]"
      annotation_repeat: 
        parser: repeating
        options:
          default_length: 0
          editor_key: annotations
          snippet: <comp.Annotation [[annotation_args]]>[[annotation_content]]</comp.Annotation>
          style:
            between: "\n"
            block:
              leading: ""
              trailing: "\n"
      annotation_args:
        parser: key_values
        options:
          models:
            - editor_key: number
              type: string
          format: 
            ref: mdx_format
      annotation_content:
        parser: content
        options: 
          editor_key: annotation_content
          allow_nested: false
          raw: true
          style: 
            output: block
            block: 
              leading: "\n"
              trailing: "\n"
              indent: "  "

  notice: 
    snippet: <comp.Notice [[args]]>[[inner]]</comp.Notice>
    inline: false
    preview:
      text:
        - key: info_type
        - Notice
      subtext:
        - key: content_markdown
      icon: info
    _inputs:
      info_type:
        type: choice
        options: 
          values:
            - id: important
              icon_path: "/assets/img/important.svg"
            - id: info
              icon_path: "/assets/img/info.svg"
            - id: pricing
              icon_path: "/assets/img/pricing.svg"
            - id: permissions
              icon_path: "/assets/img/permissions.svg"
          preview:
            text: 
              - key: id
            image:
              - key: icon_path
    params:
      args: 
        parser: key_values
        options:
          models:
            - editor_key: info_type
              type: string
          format:
            ref: mdx_format
      inner:
        parser: content
        options: 
          editor_key: content_markdown
          style:
            output: block
            block:
              leading: "\n"
              trailing: "\n"
              indent: "  "

  slot: 
    snippet: <comp.Slot [[args]]>[[inner]]</comp.Slot>
    inline: false
    preview:
      text:
        - "Content Slot"
      subtext:
        - key: name
      icon: select_all
    _inputs:
      name:
        type: text
        comment: "The name of this slot — should be referenced when using this piece of common content on a page"
      default_content:
        type: markdown
        comment: "If the slot is not defined when using this piece of common content, this content will be used instead"
        options: 
          format: true
          blockquote: true
          bold: true
          italic: true
          strike: true
          subscript: true
          superscript: true
          underline: true
          link: true
          bulletedlist: true
          numberedlist: true
          code: true
          embed: true
          horizontalrule: true
          image: true
          table: true
          snippet: true
    params:
      args:
        parser: key_values
        options:
          models:
            - editor_key: name
              type: string
          format:
            ref: mdx_format
      inner: 
        parser: content
        options: 
          editor_key: default_content
          allow_nested: true
          style:
            output: block
            block:
              leading": "\n"
              trailing": "\n"
              indent": "  "

  system_version_default: 
    template: mdx_component
    inline: true
    preview:
      text: SystemVersionDefault
    definitions: 
      component_name: comp.SystemVersionDefault
      named_args:
        - editor_key: language
          type: string
        - editor_key: item
          type: string

  system_version_list: 
    template: mdx_component
    inline: false
    preview:
      text: SystemVersionList
    definitions: 
      component_name: comp.SystemVersionList
      named_args: 
        - editor_key: language
          type: string
        - editor_key: item
          type: string
        - editor_key: showdefault
          type: boolean

  tabs:
    snippet: <comp.Tabs [[args]]>[[tabs]]</comp.Tabs>
    inline: false
    preview: 
      text: Tabs
      subtext: 
        key: label
    _inputs:
      inner_markdown: 
        type: markdown
        options: 
          blockquote: true
          bold: true
          italic: true
          strike: true
          subscript: true
          superscript: true
          underline: true
          link: true
          bulletedlist: true
          numberedlist: true
          code: true
          embed: true
          horizontalrule: true
          image: true
          table: true
          snippet: true
    params: 
      args:
        parser: key_values
        options: 
          models:
            - editor_key: label
              type: string
          format: 
            ref: mdx_format
      tabs:
        parser: repeating
        options: 
          editor_key: tabs
          snippet: <comp.Tab [[tab_args]]>[[content]]</comp.Tab>
          style:
            output: block
            between: "\n"
            block:
              leading: "\n"
              trailing: "\n"
              indent: "  "
      tab_args: 
        parser: key_values
        options:
          models:
            - editor_key: name
              type: string
          format: 
            ref: mdx_format
      content:
        parser: content
        options:
          editor_key: inner_markdown
          allow_nested: true
          style: 
            output: block
            block: 
              leading: "\n"
              trailing: "\n"
              indent: "  "

  youtube:
    template: mdx_component
    inline: false
    preview:
      text: YouTube
    definitions:
      component_name: comp.Youtube
      named_args:
        - editor_key: id
          type: string


  docs_unknown_pair: 
    hidden: true
    snippet: <comp.[[name]][[args]]>[[content]]</comp.[[name]]>
    preview:
      text:
        - Unknown Docs Component
      subtext:
        - key: name
      icon: question_mark
    _inputs:
      name:
        hidden: true
      arguments: 
        hidden: true
      content: 
        hidden: true
    params:
      name:
        parser: argument
        options: 
          model:
            editor_key: name
          format: 
            string_boundary:
              - ""
            forbidden_tokens:
              - "/"
              - "/>"
              - ">"
      args: 
        parser: content
        options:
          editor_key: arguments
          allow_nested: false
          raw: true
          forbidden_tokens:
            - "/>"
            - ">"
      content: 
        parser: content
        options:
          editor_key: content
  docs_unknown_single:
    hidden: true
    snippet: <comp.[[name]][[args]]/>
    preview:
      text:
        - "Unknown Docs Component"
      subtext:
        - key: name
      icon: question_mark
    _inputs: 
      name: 
        hidden: true
      arguments:
        hidden: true
    params:
      name: 
        parser: argument
        options: 
          model:
            editor_key: name
          format:
            string_boundary:
              - ""
            forbidden_tokens:
              - "/"
              - "/>"
              - ">"
      args: 
        parser: content
        options:
          editor_key: arguments
          allow_nested: false
          raw: true
          forbidden_tokens:
            - "/>"
            - ">"


data_config:
  article_topics:
    path: /_data/article_topics.yml
    
_select_data:
  docs_ssgs: ssg_data.ssgs
  docs_guide_series: guide_series_data.series
  docshots_status: 
    - name: 'Needs docshots'
      icon: 'add_a_photo'
      icon_color: '#cc3232'
    - name: 'Not applicable'
      icon: 'no_photography'
      icon_color: '#e7b416'
    - name: 'Added!'
      icon: 'photo_camera'
      icon_color: '#2dc937'

  diataxis_category:
    - name: 'Explanation'
      icon: 'lightbulb'
      icon_color: '#06d6a0'
    - name: 'Guide'
      icon: 'handshake'
      icon_color: '#26547c'
    - name: 'Instructions'
      icon: 'info'
      icon_color: '#ef476f'
    - name: 'Reference'
      icon: 'fact_check'
      icon_color: '#ffd166'

  key_value_type:
    - name: 'Array'
      icon: 'data_array'
    - name: 'Boolean'
      icon: 'check_box'
    - name: 'Date'
      icon: 'event'
    - name: 'Number'
      icon: '123'
    - name: 'Object'
      icon: 'add_box'
    - name: 'String'
      icon: 'abc'
    - name: 'Array of Numbers'
      icon: '123'
    - name: 'Array of Objects'
      icon: 'add_box'
    - name: 'Array of Strings'
      icon: 'abc'

collections_config:
  pages:
    path: ""
    glob:
      - "index.mdx"
      - "guides.mdx"
      - "changelog/*"
      - "articles/index.mdx"
      - "404/*"
  common_content:
    paths:
      dam_uploads: "[collection|slugify]/{date|year}/{date|month}/[asset-filename]"
    path: "_common_content"
    output: false
    icon: "copy_all"
    schemas:
      default:
        path: ".cloudcannon/schemas/common_content.mdx"
    _inputs:
      content_name:
        comment: "Give this piece of reusable content a descriptive name, as this is what you will select when inserting it in a page"
      parameters:
        type: object
        comment: "Define any keys you created in Substitution snippets here"
        options:
          subtype: mutable
          entries:
            structures:
              values:
                - value:
                    comment: null
                    type: null
                  _inputs:
                    comment:
                      comment: "Text that will be shown alongside this parameter when using this piece of custom content"
                    type:
                      comment:
                        "The CloudCannon input type that should be used for editing this parameter"
  articles:
    path: articles
    output: true
    icon: article
    url: "/articles/[slug]/"
    schemas:
      default:
        path: ".cloudcannon/schemas/article.mdx"
      instructions:
        path: ".cloudcannon/schemas/article-instructions.mdx"
    _inputs:
      "$.title":
        options:
          required: true
  guides:
    path: "guides"
    output: true
    icon: handshake
    url: "/guides/[relative_base_path]/[slug]/"
    schemas:
      default:
        path: ".cloudcannon/schemas/guide-item.mdx"
      guide_data:
        path: ".cloudcannon/schemas/guide-data.yml"
        _inputs:
          guide_target_ssgs:
            type: "multiselect"
            options:
              values: _select_data.docs_ssgs
              value_key: name
              preview:
                label:
                  key: name
          guide_series:
            type: "select"
            options:
              values: _select_data.docs_guide_series
              value_key: id
              preview:
                label:
                  key: name
  # changelog: {
  #   path: "changelogs",
  #   output: true,
  #   icon: "newspaper",
  #   url: (filePath) => {
  #     const regex =
  #       /^changelogs\/([0-9]{4})\-([0-9]{2})\-([0-9]{2})_(.+)\.mdx?/;
  #     const [, year, month, day, slug] = filePath.match(regex) || [];
  #     return `/changelog/${year}/${month}/${day}/${slug}.html`;
  #   },
  #   parser: "front-matter",
  #   sort: {
  #     key: "path",
  #     order: "desc",
  #   },
  #   create: {
  #     path: "{date|year}-{date|month}-{date|day}_{title|slugify}.[ext]",
  #     _inputs: {
  #       date: {
  #         instance_value: "NOW",
  #       },
  #     },
  #   },
  #   schemas: {
  #     default: {
  #       path: ".cloudcannon/schemas/changelog.mdx",
  #     },
  #   },
  #   _inputs: {
  #     title: {
  #       type: "text",
  #       options: {
  #         required: true,
  #         required_message: "Tell the people what they get",
  #         min_length: 5,
  #         min_length_message: "Tell people a bit more than that"
  #       }
  #     }
  #   }
  # },
  data:
    path: _data
  keys:
    path: _keys
    icon: key
    preview:
      text:
        key: key_name
      metadata:
        - text:
            key: key_value_type
          icon: data_object
        - text:
            key: parent_keys
          icon: escalator_warning
    create:
      path: "[relative_base_path]/{key_name|slugify}.yml"
    schemas:
      default:
        path: ".cloudcannon/schemas/key-definition.yml"
        _inputs:
          key_name:
            type: text
          key_singular_name:
            type: text
          key_value_type:
            type: "multiselect"
            options:
              values: _select_data.key_value_type
              value_key: name
              preview:
                label:
                  key: name
          key_description:
            type: markdown
            options:
              format: "p h1 h2 h3 h4 h5 h6"
              blockquote: true
              bold: true
              italic: true
              strike: true
              subscript: true
              superscript: true
              underline: true
              link: true
              bulletedlist: true
              numberedlist: true
              code: true
              embed: true
              horizontalrule: true
              table: true
              snippet: true
          key_documentation:
            type: object
            comment: "Add a documentation link."
            options:
              subtype: object
              structures:
                values:
                  - label: "Key Documentation Link"
                    comment: "For more information, please read our documentation on..."
                    value:
                      text: null
                      url: null
          parent_keys:
            type: multiselect
            options:
              values: collections.keys
              value_key: key_name
              preview:
                label:
                  key: key_name
          subkeys:
            type: multiselect
            options:
              values: collections.keys
              value_key: key_name
              preview:
                label:
                  key: key_name
  reference:
    path: "_reference"
    icon: "key"
    preview: 
      text: 
        key: key_name
      metadata:
        - text:
            key: full_name
          icon: code
        - text: 
            key: value_type
          icon: data_object
        - text:
            key: child_keys
          icon: escalator_warning
    create:
      path: "[relative_base_path]/{full_name|slugify}.yml"
    schemas:
      default:
        path: ".cloudcannon/schemas/key-reference.yml"
        _inputs:
          name:
            type: text
          full_name:
            type: text
          value_type:
            type: multiselect
            options:
              values: _select_data.key_value_type
              value_key: name
              preview:
                label:
                  key: name
          description:
            type: markdown
            options:
              format: "p h1 h2 h3 h4 h5 h6"
              blockquote: true
              bold: true
              italic: true
              strike: true
              subscript: true
              superscript: true
              underline: true
              link: true
              bulletedlist: true
              numberedlist: true
              code: true
              embed: true
              horizontalrule: true
              table: true
              snippet: true
          examples:
            type: markdown
            options:
              format: "p h1 h2 h3 h4 h5 h6"
              blockquote: true
              bold: true
              italic: true
              strike: true
              subscript: true
              superscript: true
              underline: true
              link: true
              bulletedlist: true
              numberedlist: true
              code: true
              embed: true
              horizontalrule: true
              table: true
              snippet: true
          parent_keys:
            type: multiselect
            options:
              values: collections.reference
              value_key: name
              preview:
                label:
                  key: name
          child_keys:
            type: multiselect
            options:
              values: collections.reference
              value_key: name
              preview:
                label:
                  key: name
  glossary:
    path: _glossary
    icon: abc
    preview:
      text:
        key: key_name
    schemas: 
      default: 
        path: ".cloudcannon/schemas/glossary-term.yml"
        _inputs:
          glossary_term_name:
            type: "text"
          term_description:
            type: "textarea"
            comment: "Keep this as short as possible (i.e., 125 characters)."
            context:
              open: false
              title: "Help"
              icon: "help"
              content: "Try not to use the term name in the description."
            options:
              show_count: true
collection_groups:
  - heading: Users
    collections:
      - articles
      - guides
      - glossary
  - heading: Developers
    collections:
      - keys
      - reference
  - heading: Other
    collections:
      - changelog
      - pages
  - heading: Data
    collections:
      - data
      - common_content

_editables:
  content:
    format: "p h1 h2 h3 h4 h5 h6"
    blockquote: true
    bold: true
    italic: true
    strike: true
    subscript: true
    superscript: true
    underline: true
    link: true
    bulletedlist: true
    numberedlist: true
    code: true
    embed: true
    horizontalrule: true
    table: true
    snippet: true
    allow_custom_markup: true

_structures:
  related_links:
    values:
      value:
        name: ""
        url: ""
  common_content_types:
    values: common_content_structures

_inputs:
  _created_at:
    instance_value: "NOW"
  _uuid:
    instance_value: "UUID"
  description:
    options:
      show_count: true
  explicit_canonical:
    type: "url"
    comment: "Optionally reference a different page or URL that this page should set as its canonical URL"
  article_category:
    type: "multichoice"
    comment: "Choose a [Diataxis category](https://diataxis.fr/compass/)."
    context:
      open: false
      title: "Help"
      icon: "help"
      content: "Acquire skill and understand: Explanation \n\n Acquire skill and act: Guide \n\n Apply skill and understand: Reference \n\n Apply skill and act: Instructions"
    options:
      values: _select_data.diataxis_category
      preview:
        icon_color:
          - key: icon_color
  author_notes:
    type: object
    options:
      subtype: object
  docshots_status:
    type: select
    comment: Select whether this article needs Docshots.
    options:
      values: _select_data.docshots_status
      preview:
        icon_color:
          - key: icon_color
  article_topic: 
    type: multiselect
    comment: Select which topics apply to this article.
    options:
      values: data.article_topics

commit_templates:
  - template_string: '{message}'
    _inputs:
      message:
        type: text
        options:
          required: true
timezone: Pacific/Auckland
base_url: documentation