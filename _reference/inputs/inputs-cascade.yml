_schema: default
full_name: _inputs.*.cascade
key_name: cascade
value_type:
  - Boolean
description: |-
  This key determines whether CloudCannon should merge this Input configuration with any matching, less specific configurations elsewhere in the configuration cascade.

  The [configuration cascade](/documentation/articles/using-the-configuration-cascade/) works by finding the most specific `_inputs` entry. Usually, once an option is found in the cascade, there's no reason to keep looking. When this key is `true`, the cascade continues looking and each entry found is merged.

  This key allows you to define some options globally while using specific options for other keys at different levels of the cascade. For example, define a `comment` globally, but use collection-specific `label` for inputs in different collections. You can stop the cascade at any point in the configuration cascade by setting `cascade` to `false`.

  By default, this key is `true` (i.e., merges all configurations for an Input in the cascade).
examples: |-
  <comp.Example>
    In this example, we want to define a global comment for all `title` inputs, but use collection-specific labels.

    <comp.MultiCodeBlock language="YAML" translate_into={["json"]} source="cloudcannon.config.yml">
        ``````````
        _inputs:
          title:
            comment: Enter the main title for this content
            cascade: true

        collections_config:
          blog:
            _inputs:
              title:
                label: Blog Post Title
                cascade: false
          products:
            _inputs:
              title:
                label: Product Name
                cascade: false
        ``````````
        </comp.MultiCodeBlock>
  </comp.Example>
parent_keys:
  - _inputs
child_keys: 